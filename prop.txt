在 Vue 中，prop（屬性）是一種用來 從父元件向子元件傳遞資料 的機制。

Prop 是子元件接收父元件傳遞過來的「外部數據」。
父元件可以用標籤屬性的方式，把資料（文字、數字、物件、陣列、函數等）傳給子元件。
子元件透過 props 選項來宣告要接收哪些變數。

Prop 的功能
讓元件可重複使用，透過不同資料顯示不同內容。
建立「單向資料流」，從父到子，提高程式可維護度與結構清晰。
子元件不能修改 prop，只能用 prop 作為輸入，避免資料不同步問題。

元件樣貌訂在子元件，但是要顯示的內容，放在父元件，父元件是最終積木組好的地方

子元件負責定義元件的「樣貌」（UI 結構、樣式、元件行為等），例如按鈕樣式、輸入框、外觀佈局
父元件則負責傳遞「內容」和「資料」給子元件顯示，通常透過 props 傳入

父元件是組合子元件的地方，就像積木一樣，將各子元件組合成完整的頁面或應用功能
因此，父元件作為最終組合的地方，決定哪些資料要顯示在子元件，而子元件專注於如何呈現這些資料

範例
父元件：
<template>
  <div>
    <child-component message="Hello Vue!" />
  </div>
</template>

<script>
import ChildComponent from './ChildComponent.vue'
export default {
  components: { ChildComponent }
}
</script>

*******************************************************

子元件
ChildComponent.vue：
<template>
  <div>
    <!-- 顯示從父元件收到的 prop -->
    <p>{{ message }}</p>
  </div>
</template>

<script>
export default {
  props: ['message']  // 宣告接收 message 這個 prop
}
</script>

*******************************************************
執行畫面：

Hello Vue!
*******************************************************

prop 是父元件給子元件的變數參數。
它只用來「傳遞」資料，子元件不可直接修改（若要改，需要用事件通知父元件）。
透過 prop，組件變得更可組合、彈性且易維護。